# patches/zx+7.0.1.patch
# A patch that modifies the appearance of the spinner and hides password input.

diff --git a/node_modules/zx/build/experimental.js b/node_modules/zx/build/experimental.js
index e7dd0bd..537e2a6 100644
--- a/node_modules/zx/build/experimental.js
+++ b/node_modules/zx/build/experimental.js
@@ -76,7 +76,7 @@ export async function spinner(title, callback) {
         title = '';
     }
     let i = 0;
-    const spin = () => process.stderr.write(`  ${'⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏'[i++ % 10]} ${title}\r`);
+    const spin = () => process.stderr.write(`${'⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏'[i++ % 10]}  ${title}\r`);
     return within(async () => {
         $.verbose = false;
         const id = setInterval(spin, 100);
@@ -86,6 +86,7 @@ export async function spinner(title, callback) {
         }
         finally {
             clearInterval(id);
+            process.stderr.write(`${title.split('').map(() => ' ').join('')}\r`)
         }
         return result;
     });
diff --git a/node_modules/zx/build/goods.d.ts b/node_modules/zx/build/goods.d.ts
index 0aec1a3..f56f434 100644
--- a/node_modules/zx/build/goods.d.ts
+++ b/node_modules/zx/build/goods.d.ts
@@ -19,5 +19,6 @@ export declare function fetch(url: RequestInfo, init?: RequestInit): Promise<imp
 export declare function echo(pieces: TemplateStringsArray, ...args: any[]): void;
 export declare function question(query?: string, options?: {
     choices: string[];
+    password: boolean;
 }): Promise<string>;
 export declare function stdin(): Promise<string>;
diff --git a/node_modules/zx/build/goods.js b/node_modules/zx/build/goods.js
index 7865a4d..2eaae7d 100644
--- a/node_modules/zx/build/goods.js
+++ b/node_modules/zx/build/goods.js
@@ -14,7 +14,7 @@
 import * as globbyModule from 'globby';
 import minimist from 'minimist';
 import nodeFetch from 'node-fetch';
-import { createInterface } from 'node:readline';
+import { createInterface, moveCursor, clearLine } from 'node:readline';
 import { $ } from './core.js';
 import { isString, parseDuration, stringify } from './util.js';
 export { default as chalk } from 'chalk';
@@ -72,6 +72,16 @@ export async function question(query, options) {
         terminal: true,
         completer,
     });
+    if (options && options.password) {
+        rl.input.on('keypress', function (c, k) {
+            let len = rl.line.length;
+            moveCursor(rl.output, -len, 0);
+            clearLine(rl.output, 1);
+            for (var i = 0; i < len; i++) {
+                rl.output.write("*");
+            }
+        });
+    }
     return new Promise((resolve) => rl.question(query ?? '', (answer) => {
         rl.close();
         resolve(answer);
